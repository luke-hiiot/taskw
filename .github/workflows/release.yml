name: Release

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - goos: linux
            goarch: amd64
          - goos: linux
            goarch: arm64
          - goos: darwin
            goarch: amd64
          - goos: darwin
            goarch: arm64
          - goos: windows
            goarch: amd64
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24.1'
        
    - name: Build binary
      run: |
        BINARY_NAME="taskw-${{ matrix.goos }}-${{ matrix.goarch }}"
        if [ "${{ matrix.goos }}" = "windows" ]; then
          BINARY_NAME="${BINARY_NAME}.exe"
        fi
        GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -ldflags="-s -w" -o ${BINARY_NAME} main.go
        
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: taskw-${{ matrix.goos }}-${{ matrix.goarch }}
        path: taskw-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.goos == 'windows' && '.exe' || '' }}
        
  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: ./artifacts
        
    - name: Move artifacts to root
      run: |
        find ./artifacts -name "taskw-*" -type f -exec mv {} . \;
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          taskw-linux-amd64
          taskw-linux-arm64
          taskw-darwin-amd64
          taskw-darwin-arm64
          taskw-windows-amd64.exe
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
