package health

import (
	"time"

	"github.com/gofiber/fiber/v2"
)

// Handler handles HTTP requests for health operations
type Handler struct {
	service *Service
}

// ProvideHandler creates a new health handler
func ProvideHandler(service *Service) *Handler {
	return &Handler{
		service: service,
	}
}

// GetHealth retrieves system health status
// @Summary Get system health
// @Description Get the current health status of the API
// @Tags health
// @Accept json
// @Produce json
// @Success 200 {object} map[string]interface{}
// @Router /health [get]
func (h *Handler) GetHealth(c *fiber.Ctx) error {
	health := h.service.GetHealth()

	return c.JSON(fiber.Map{
		"status":    health.Status,
		"timestamp": time.Now().Unix(),
		"service":   health.Service,
		"uptime":    health.Uptime,
		"note":      "Routes generated by taskw",
	})
}
